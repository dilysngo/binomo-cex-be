# Generated by Django 3.2.18 on 2023-03-02 09:50

from django.db import migrations, models
import lib.fields


def regenerate_addresses(apps, schema_editor):
    UserWallet = apps.get_model('core', 'UserWallet')

    from cryptocoins.coins.eth.wallet import create_eth_address
    from cryptocoins.coins.trx.wallet import create_trx_address
    from cryptocoins.coins.bnb.wallet import create_bnb_address

    wallets = UserWallet.objects.filter(blockchain_currency='ETH')
    count = wallets.count()

    print(f'ETH Wallets regeneration started. Total: {count}')

    for wallet in wallets:
        address, encrypted_key = create_eth_address()

        UserWallet.objects.create(
            user_id=wallet.user_id,
            currency=wallet.currency,
            blockchain_currency=wallet.blockchain_currency,
            address=address,
            private_key=encrypted_key,
        )
        wallet.is_old = True
        wallet.save()

    wallets = UserWallet.objects.filter(blockchain_currency='TRX')
    count = wallets.count()

    print(f'TRX Wallets regeneration started. Total: {count}')

    for wallet in wallets:
        address, encrypted_key = create_trx_address()

        UserWallet.objects.create(
            user_id=wallet.user_id,
            currency=wallet.currency,
            blockchain_currency=wallet.blockchain_currency,
            address=address,
            private_key=encrypted_key,
        )
        wallet.is_old = True
        wallet.save()

    wallets = UserWallet.objects.filter(blockchain_currency='BNB')
    count = wallets.count()

    print(f'BNB Wallets regeneration started. Total: {count}')

    for wallet in wallets:
        address, encrypted_key = create_bnb_address()

        UserWallet.objects.create(
            user_id=wallet.user_id,
            currency=wallet.currency,
            blockchain_currency=wallet.blockchain_currency,
            address=address,
            private_key=encrypted_key,
        )
        wallet.is_old = True
        wallet.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_auto_20230302_0950'),
    ]

    operations = [
        migrations.RunPython(regenerate_addresses),
    ]
