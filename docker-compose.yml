version: '3.8'
services:
  opencex:
    container_name: opencex
    image: opencex:latest
    restart: always
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis

  # opencex-cel:
  #   container_name: opencex-cel
  #   image: opencex:latest
  #   command: celery -A exchange worker -l info -n general -B -s /tmp/cebeat.db -X eth_new_blocks,eth_deposits,eth_payouts,eth_check_balances,eth_accumulations,eth_tokens_accumulations,eth_send_gas,bnb_new_blocks,bnb_deposits,bnb_payouts,bnb_check_balances,bnb_accumulations,bnb_tokens_accumulations,bnb_send_gas
  #   restart: always
  #   volumes:
  #     - .:/code
  #   depends_on:
  #     - db
  #     - redis
  #     - rabbitmq
  #     - opencex

  # opencex-stack:
  #   container_name: opencex-stack
  #   image: opencex:latest
  #   command: python bin/stack.py
  #   restart: always
  #   volumes:
  #     - .:/code
  #   depends_on:
  #     - db
  #     - redis
  #     - rabbitmq
  #     - opencex

  # opencex-bnb-blocks:
  #   container_name: opencex-bnb-blocks
  #   image: opencex:latest
  #   command: bash -c "celery -A exchange worker -l info -n bnb_new_blocks -Q bnb_new_blocks -c 1 "
  #   restart: always
  #   volumes:
  #     - .:/code
  #   depends_on:
  #     - db
  #     - redis
  #     - rabbitmq
  #     - opencex

  # opencex-eth-blocks:
  #   container_name: opencex-eth-blocks
  #   image: opencex:latest
  #   command: bash -c "celery -A exchange worker -l info -n eth_new_blocks -Q eth_new_blocks -c 1 "
  #   restart: always
  #   volumes:
  #     - .:/code
  #   depends_on:
  #     - db
  #     - redis
  #     - rabbitmq
  #     - opencex

  db:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      # - "POSTGRES_HOST_AUTH_METHOD=trust"
      - POSTGRES_DB=opencex
      - POSTGRES_USER=opencex
      - POSTGRES_PASSWORD=password

  redis:
    container_name: redis
    restart: always
    image: redis:latest
    volumes:
      - ./redis_data:/data
    entrypoint: redis-server

  # rabbitmq:
  #   hostname: rabbitmq
  #   container_name: rabbitmq
  #   restart: always
  #   image: rabbitmq:3.9.22-management
  #   volumes:
  #     - ./rabbitmq_data/:/var/lib/rabbitmq/
  #     - ./rabbitmq_logs/:/var/log/rabbitmq/
  #   environment:
  #     RABBITMQ_DEFAULT_USER: opencex
  #     RABBITMQ_DEFAULT_PASS: NSc
  #     RABBITMQ_DEFAULT_VHOST: /
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"

volumes:
  postgres_data:
